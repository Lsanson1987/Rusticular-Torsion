import { LineEdit, Button, Slider, HorizontalBox, VerticalBox, ProgressIndicator } from "std-widgets.slint";


export component AppWindow inherits Window {
    in-out property <int> counter: 10;
    callback request-increase-value();
    VerticalBox {
        Text {
            text: "Counter: \{root.counter}";
        }

        Button {
            text: "Increase value";
            clicked => {
                root.request-increase-value();
            }
        }
    }
}

export component MainWindow inherits Window {
    in-out property <duration> total-time: slider.value * 1s;
    in-out property <duration> elapsed-time;
    private property <bool> timer-running: false;

    Timer {
        interval: 10ms;
        running: root.timer-running;
        triggered => {
            root.elapsed-time += self.interval;
            root.elapsed-time = min(root.elapsed-time, root.total-time);
        }
    }

    VerticalBox {
        HorizontalBox {
            padding: 0;
            Text { text: "Elapsed Time:"; }
            ProgressIndicator {
                preferred-width: 100px;
                progress: elapsed-time / total-time;
            }
        }
        Text{
            text: (root.total-time / 1s) + "s";
        }
        HorizontalBox {
            padding: 0;
            Text {
                text: "Duration:";
                vertical-alignment: center;
            }
            slider := Slider {
                maximum: 9.22882; // Log 2 scale
                value: 5.90689; // log2(60s)  
                changed(new-log-value) => {
                    root.total-time = pow(2, new-log-value) * 1s;
                    root.elapsed-time = min(root.elapsed-time, root.total-time);
                }
            }
        }
        HorizontalBox {
            spacing: 10px;
            Button {
                text: "Start";
                clicked => {
                    root.timer-running = true;
                }
            }
            Button {
                text: "Stop";
                clicked => {
                    root.timer-running = false;
                }
            }
            Button {
                text: "Reset";
                clicked => {
                    root.timer-running = false;
                    root.elapsed-time = 0;
                }
            }
        }
    }
}
